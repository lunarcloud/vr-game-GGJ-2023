[gd_resource type="ShaderMaterial" load_steps=18 format=2]

[ext_resource path="res://game/objects/force_field/force_field_noise.tres" type="Texture" id=1]

[sub_resource type="VisualShaderNodeColorConstant" id=13]
constant = Color( 0.316444, 0.319831, 0.88539, 1 )

[sub_resource type="VisualShaderNodeInput" id=14]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=19]
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=31]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=21]
input_name = "vertex"

[sub_resource type="VisualShaderNodeScalarSmoothStep" id=32]
output_port_for_preview = 0
default_input_values = [ 0, 0.3, 1, 0.6, 2, 0.0 ]

[sub_resource type="VisualShaderNodeScalarSmoothStep" id=33]
output_port_for_preview = 0
default_input_values = [ 0, 0.9, 1, 0.6, 2, 0.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=34]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeTexture" id=35]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=36]

[sub_resource type="VisualShaderNodeScalarFunc" id=37]
output_port_for_preview = 0
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=38]
default_input_values = [ 0, 0.0, 1, 25.1327 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=39]
input_name = "camera"

[sub_resource type="VisualShaderNodeTransformVecMult" id=40]

[sub_resource type="VisualShaderNodeVectorOp" id=41]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.25, 0.25, 0.25 ) ]
operator = 2

[sub_resource type="VisualShader" id=22]
code = "shader_type spatial;
render_mode blend_add, cull_disabled, specular_schlick_ggx, async_visible, unshaded;

uniform sampler2D tex_frg_53;



void vertex() {
// Output:0

}

void fragment() {
// Color:19
	vec3 n_out19p0 = vec3(0.316444, 0.319831, 0.885390);
	float n_out19p1 = 1.000000;

// Input:2
	float n_out2p0 = TIME;

// ScalarOp:25
	float n_in25p1 = 0.50000;
	float n_out25p0 = n_out2p0 * n_in25p1;

// Input:58
	mat4 n_out58p0 = CAMERA_MATRIX;

// Input:5
	vec3 n_out5p0 = VERTEX;

// TransformVectorMult:60
	vec3 n_out60p0 = (n_out58p0 * vec4(n_out5p0, 1.0)).xyz;

// VectorOp:61
	vec3 n_in61p1 = vec3(0.25000, 0.25000, 0.25000);
	vec3 n_out61p0 = n_out60p0 * n_in61p1;

// Texture:53
	vec4 tex_frg_53_read = texture(tex_frg_53, n_out61p0.xy);
	vec3 n_out53p0 = tex_frg_53_read.rgb;
	float n_out53p1 = tex_frg_53_read.a;

// ScalarOp:57
	float n_in57p1 = 25.13274;
	float n_out57p0 = dot(n_out53p0, vec3(0.333333, 0.333333, 0.333333)) * n_in57p1;

// ScalarOp:55
	float n_out55p0 = n_out25p0 + n_out57p0;

// ScalarFunc:56
	float n_out56p0 = sin(n_out55p0);

// ScalarSmoothStep:50
	float n_in50p0 = 0.30000;
	float n_in50p1 = 0.60000;
	float n_out50p0 = smoothstep(n_in50p0, n_in50p1, n_out56p0);

// ScalarSmoothStep:51
	float n_in51p0 = 0.90000;
	float n_in51p1 = 0.60000;
	float n_out51p0 = smoothstep(n_in51p0, n_in51p1, n_out56p0);

// ScalarOp:52
	float n_out52p0 = n_out50p0 + n_out51p0;

// ScalarOp:49
	float n_in49p1 = 0.10000;
	float n_out49p0 = n_out52p0 * n_in49p1;

// Output:0
	ALBEDO = n_out19p0;
	ALPHA = n_out49p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -625.478, -119.281 )
modes/blend = 1
modes/cull = 2
flags/unshaded = true
nodes/fragment/0/position = Vector2( 2000, -80 )
nodes/fragment/2/node = SubResource( 14 )
nodes/fragment/2/position = Vector2( -760, -20 )
nodes/fragment/5/node = SubResource( 21 )
nodes/fragment/5/position = Vector2( -1220, 340 )
nodes/fragment/19/node = SubResource( 13 )
nodes/fragment/19/position = Vector2( 1580, -80 )
nodes/fragment/25/node = SubResource( 19 )
nodes/fragment/25/position = Vector2( -380, -20 )
nodes/fragment/49/node = SubResource( 31 )
nodes/fragment/49/position = Vector2( 1560, 100 )
nodes/fragment/50/node = SubResource( 32 )
nodes/fragment/50/position = Vector2( 820, -100 )
nodes/fragment/51/node = SubResource( 33 )
nodes/fragment/51/position = Vector2( 800, 280 )
nodes/fragment/52/node = SubResource( 34 )
nodes/fragment/52/position = Vector2( 1180, 40 )
nodes/fragment/53/node = SubResource( 35 )
nodes/fragment/53/position = Vector2( -380, 260 )
nodes/fragment/55/node = SubResource( 36 )
nodes/fragment/55/position = Vector2( 220, 80 )
nodes/fragment/56/node = SubResource( 37 )
nodes/fragment/56/position = Vector2( 500, 80 )
nodes/fragment/57/node = SubResource( 38 )
nodes/fragment/57/position = Vector2( -80, 340 )
nodes/fragment/58/node = SubResource( 39 )
nodes/fragment/58/position = Vector2( -1180, 140 )
nodes/fragment/60/node = SubResource( 40 )
nodes/fragment/60/position = Vector2( -840, 200 )
nodes/fragment/61/node = SubResource( 41 )
nodes/fragment/61/position = Vector2( -800, 400 )
nodes/fragment/connections = PoolIntArray( 2, 0, 25, 0, 50, 0, 52, 0, 51, 0, 52, 1, 19, 0, 0, 0, 52, 0, 49, 0, 25, 0, 55, 0, 55, 0, 56, 0, 53, 0, 57, 0, 57, 0, 55, 1, 56, 0, 50, 2, 56, 0, 51, 2, 49, 0, 0, 1, 58, 0, 60, 0, 5, 0, 60, 1, 60, 0, 61, 0, 61, 0, 53, 0 )

[resource]
shader = SubResource( 22 )
